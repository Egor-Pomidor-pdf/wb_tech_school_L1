package outerservice

type wordDocument struct {
}

func (doc wordDocument) converToPDF() {

}

type wordDocumentAdapter struct {
	doc wordDocument
}

func (doc wordDocumentAdapter) SendPDFDocument(){
	doc.doc.converToPDF()
	println("sending... pdf document")	
}


// Применимость:
// Когда нужно использовать существующий класс, но его интерфейс не соответствует требованиям

// Когда нужно интегрировать несколько классов с несовместимыми интерфейсами

// Когда нужно обеспечить работу с классами, о которых вы не знаете на этапе проектирования

// Плюсы:
// Отделяет и скрывает от клиента детали преобразования различных интерфейсов

// Повышает переиспользуемость кода - можно использовать существующие классы с новыми интерфейсами

// Соответствует принципу открытости/закрытости - можно добавлять новые адаптеры без изменения клиентского кода

// Минусы:
// Усложняет код дополнительными классами/структурами

// Может снизить производительность из-за дополнительного уровня абстракции

// Примеры использования:
// Интеграция платежных систем - адаптеры для разных платежных шлюзов

// Работа с базами данных - адаптеры для разных СУБД с единым интерфейсом